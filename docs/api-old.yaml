openapi: 3.0.1
info:
  title: OpenTogetherTube REST API
  description: This specifies all the endpoints available to all instances of OpenTogetherTube. All endpoints are subject to change spontaneously and without warning as new features are added or bugs are fixed.
  version: 0.1.0
externalDocs:
  description: Other docs
  url: https://github.com/dyc3/opentogethertube/tree/master/docs
servers:
- url: https://opentogethertube.com/api
- url: http://opentogethertube.com/api
- url: http://localhost:8080/api
tags:
- name: room
  description: Operations about Rooms
- name: data
  description: Grabbing metadata
- name: user
  description: Operations about Users
paths:
  /room/list:
    get:
      tags:
      - room
      summary: List open public rooms. If a valid api key is provided, it will list all rooms, including unlisted or private rooms.
      responses:
        200:
          description: List of rooms, sorted by number of users in descending order, then by room name.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/RoomListed"
        400:
          description: Invalid API key
          $ref: '#/components/responses/ErrorV1'
  /room/{name}:
    get:
      tags:
      - room
      summary: Get info about the room
      parameters:
      - in: path
        name: name
        description: "Name of the room"
        required: true
        schema:
          type: string
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Room"
        400:
          description: "Something was wrong with the request."
          $ref: '#/components/responses/ErrorV2'
        404:
          description: "Room was not found"
          $ref: '#/components/responses/ErrorV2'
        500:
          description: "Internal Server Error. An exception was thrown on the server that was not handled."
          $ref: '#/components/responses/ErrorV2'
components:
  responses:
    Success:
      description: Generic success response.
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: true
    ErrorV1:
      description: The old error response. Deprecated, and only used by some methods.
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              error:
                type: string
    ErrorV2:
      description: Generic error response.
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              error:
                $ref: "#/components/schemas/Error"
  schemas:
    Error:
      type: object
      properties:
        name:
          type: string
          example: "PermissionDeniedException"
        message:
          type: string
    Video:
      type: object
      properties:
        service:
          type: string
        id:
          type: string
        title:
          type: string
        description:
          type: string
        thumnail:
          type: string
          format: uri
        length:
          type: integer
          minimum: 0
    Permissions:
      type: object
      # TODO: this
    RoomBase:
      type: object
      properties:
        name:
          type: string
        title:
          type: string
        description:
          type: string
        isTemporary:
          type: boolean
        visibility:
          type: string
          enum: [public, unlisted, private]
        queueMode:
          type: string
          enum: [manual, vote]
    RoomListed:
      $ref: "#/components/schemas/RoomBase"
      type: object
      properties:
        currentSource:
          type: object
          $ref: "#/components/schemas/Video"
        users:
          type: integer
    Room:
      $ref: "#/components/schemas/RoomBase"
      type: object
      properties:
        queue:
          type: array
          items:
            $ref: "#/components/schemas/Video"
        clients:
          type: object
          $ref: "#/components/schemas/Video"
        users:
          type: integer
        permissions:
          type: object
          $ref: "#/components/schemas/Permissions"
    User:
      type: object
      properties:
        username:
          type: string
        isLoggedIn:
          type: boolean
  securitySchemes:
    api_key:
      type: apiKey
      name: api_key
      in: header
