name: Cypress Tests

on:
  pull_request:
    paths-ignore:
    - '.vscode/**'
    - 'docs/**'
    - 'env/**'
    - '**/*.md'
    - '.gitpod.yml'
  push:
    branches:
    - master
    paths-ignore:
    - '.vscode/**'
    - 'docs/**'
    - 'env/**'
    - '**/*.md'
    - '.gitpod.yml'

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  component:
    runs-on: ubuntu-latest
    # container:
    #   image: cypress/browsers:node16.18.0-chrome107-ff106-edge
    #   options: --user 1001
    strategy:
      fail-fast: false
      matrix:
        node-version: [18.x]
        # run copies of the current job in parallel
        containers: [1]
        browsers: [electron]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cache/Cypress
            node_modules
          key: cache-${{ runner.os }}-${{ matrix.node-version }}-${{ hashFiles('yarn.lock') }}

      - run: yarn --frozen-lockfile
      - run: yarn run cypress install

      - name: 'Component Tests'
        uses: cypress-io/github-action@v4.2.0
        with:
          install: false
          component: true
          record: true
          parallel: false
          group: 'Component - ${{ matrix.browsers }}'
          browser: ${{ matrix.browsers }}
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          # Recommended: pass the GitHub token lets this action correctly
          # determine the unique run id necessary to re-run the checks
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  e2e:
    runs-on: ubuntu-latest
    # container:
    #   image: cypress/browsers:node16.18.0-chrome107-ff106-edge
    #   options: --user 1001
    strategy:
      fail-fast: false
      matrix:
        node-version: [18.x]
        # run copies of the current job in parallel
        containers: [1, 2]
        browsers: [electron]
    env:
      # this is safe because it's only used for testing
      SESSION_SECRET: LERTmi2Jiz6gJHt21AZUWBstezP41P3odxzEsCo1w4zL8XqGyjGdMZ2QPXUenVQQ2fY1xzGBYseB1g9teRHbxF
    services:
      redis:
        image: redis
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          check-latest: true
          cache: "yarn"

      - run: yarn install --frozen-lockfile

      - name: Build client
        run: yarn run build

      - run: yarn run cypress install
      - run: yarn workspace ott-server run sequelize db:migrate

      - name: 'E2E Tests'
        uses: cypress-io/github-action@v4.2.0
        with:
          install: false
          start: yarn start
          wait-on: 'http://localhost:8080/api/status'
          wait-on-timeout: 120
          browser: ${{ matrix.browsers }}
          record: true
          parallel: true
          group: 'E2E - ${{ matrix.browsers }}'
        env:
          PORT: 8080
          REDIS_HOST: 127.0.0.1
          REDIS_PORT: 6379
          YOUTUBE_API_KEY: ${{ secrets.YOUTUBE_API_KEY }}
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          # Recommended: pass the GitHub token lets this action correctly
          # determine the unique run id necessary to re-run the checks
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
